**HTML и CSS** - это базовые технологии, которыми должен владеть тест-к. Ему необходимо посмотреть код страницы: свойства разметки, проверять кодировку данных, мета-теги для SEO и т.д. 

**HTML (HyperText Markup Language)** - это язык гипертекстовой рахметки страницы. Он используется для того, чтобы дать браузеру понять, как нужно отображать загруженный сайт. На нем нельзя писать программы, но на его основке можно создать веб-страничку. 
*Парные теги* состоят из двух частей: открывающий и закрывающий тег. 

<h1>Это заголовок</h1>

В закрывающей части перед именем ставится символ / («слэш»). В парные теги можно вкладывать и другие теги. Например как в список. 

<ul>
  <li>Это элемент ненумерованного списка</li>
  <li>И ещё один</li>
</ul>

У *вложенных тегов* всегда нужно следить за правильным порядкм закрытия. Вложенный тег не может закрываться похже родительского. 
Но, не все теги можно вкладывать в другие теги. Н-р, тег главного закогловка  <h1> нельзя вкладывать в тег абзаца -  <p>
Есть и *одиночные теги*. Н-р тег <img> позволяет добавить картинку в разметку. 
Сам по себе он не имеет смысла. Чтобы он работал, необходимо написать внутри него адрес, ведущий к картинке. Делается это с помощью атрибута src. 

<img src=«logo.jpg»>

logo.jpg - это картика, расположенная в одной папке с html-документом. 
У тега может быть несколько атрибутов, которые нужно писать через пробел: 
<тег атрибут1=«значение1» атрибут2=«значение2»>

Картинке, например, можно задать размеры: 

<img src=«logo.jpg» width=«200» height=«100»>

Код заключенный между символами <!-  и -> работать не будет. 
Если символы удалить, то код заработает. С помощью комментариев обычно временно отключают какой-то код или оставляют подсказки для коллег. 

<!-- Это комментарий в HTML -->

**CSS (Cascading Style Sheets, каскадные таблицы стилей)** - язык описания внешнего вида HTML-документа. Ни один современный сайт не обходится без него (он придуман для упрощения кода). До CSS стили задавались в атрибутах HTML-тегов, что затрудняло работу, т.к увеличивало копипасту кода. Сейчас все CSS-правила задают в отдельном файле, указывая ссылку на него в HTML файле. 
C помощью CSS можно задавать параметры тега: ширину и высоту, отступф, цвет и размер шрифта, фон и т.д. Все эти параметры задаются с помощью свойств в определенном формате: свойство: значение. Н-р:
color: red
Можно сказать, что CSS-правило - это группа свойств и их значений, относящиеся к тем тегам, на которые указывает селектор:
селектор: {свойство1: значение;}
Селектор указывает к каким тегам применяется правило. Селекторы по тегам работают просто: они выбирают все теги с подходящим именем. 
p1 {color: red;} 

**Классы**
Также, стили к тегам добавляются при помощи атрибута class. Классы используются, когда нужно указать стили не к конкретным тегам. Н-р если необходимо чтобы определенные стили, описанные допустим, в классе green, применились к тегу <ul> то в разметке необходимо написать: <ul class=«green»>
Когда же стили задаются по классам, то стили применяются только к тегам с такими классами. 
.название класса { свойство: значение;}
.green {
	color% green;
}
Класс green можно присвоить и к другим тегам. 

В CSS тоже существуют комментарии, но их отличие в том, что код или подсказки пишутся между символами /* и */
/* Это комментарий в CSS */

**Структура веб-страницы**



```
<!DOCTYPE html>
```

 
```
<html lang="ru">
```

 
```
<head>
```

 
```
  <!-- кодировка страницы -->
```

 
```
  <meta charset="UTF-8">
```

 
```
  <!-- ссылка на CSS-файл -->
```

 
```
  <link rel="stylesheet" href="styles.css">
```

 
```
  <title>Это название вкладки</title>
```

 
```
</head>
```

 
```
<body>
```

 
```
  <h1>Это заголовок</h1>
```

 
```
  <p>
```

 
```
    Это абзац текста
```

 
```
    <a href="https://kavichki.com/" target="_blank">с гиперссылкой</a>.
```

 
```
  </p>
```

 
```
  <!-- в src указываем название файла с картинкой,
```

 
```
  которую размещаем в одной папке с нашим HTML-документом -->
```

 
```
  <img src="logo.jpg">
```

 
```
  <!-- это атрибут для CSS-правил под названием "list" -->
```

 
```
  <ul class="list">
```

 
```
    <li>Это элемент ненумерованного списка</li>
```

 
```
    <li>И ещё один</li>
```

 
```
  </ul>
```

 
```
  <!-- Разные веб-формы, типы которых указаны в теге type -->
```

 
```
  <input type="email">
```

 
```
  <input type="date">
```

 
```
  <input type="file">
```

 
```
</body>
```

 
```
</html>
```

DOCTYPE - это деклврация HTML-документа, который пишут в начале. Она определяет формат изображения. Если не указать декларацию, то страница может отображаться некорректно. 
Тег <html> и атрибут lang со значением «ru» нужны, чтобы корректно отображался русский язык:

<html> lang=«ru»> 

Дальше идет тег <head> где хранится служебная информация: кодировка док-та, ссылка на CSS-файл, название вкладки. Эта инфа не отображается на сайте. 
<head>
	<!-- кодировка страницы -->
	<meta charset=«UTF-8»>
	<!-- ссылка на CSS-файл -->
	<link rel=«stylesheet» href=«styles.css»>
	<title>Это название вкладки</title>
</head>

Теперь к <body> в котором и хранится весь контент сайтов: картинки, заголовки, абзацы, кнопки и т.д. 

<body>
	<h1>Это заголовок</h1>
	<p>
	 Это абзац текста
	 <a href=«https://kavichki.com/« target=_blank»>c гиперссылкой</a>
	</p>
	<!-- в src указываем название файла с картинкой, которую размещаем в одной папке с нашим HTML-документом -->
	<img src=«logo.jpg»>
	<!-- это атрибут для CSS-правил под названием «list» -->
	<ul class=«list»>
		<li>Это элемент ненумерованного списка</li>
		<li>И еще один</li>
	</ul>
	<!-- разные веб-формы, типы которых указаны в теге type -->
	<input type=«email»>
	<input type=«date»>
	<input type=«file»>
</body>
</html>

