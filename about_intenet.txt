# Как работает интернет

***Интернет** * - система связаных между собой устройств, благодаря которой эти устройства могут отправлять друг другу данные. 
Модель OSI (Open System Interconnection) - описывает процесс передачи данных 7 уровнями. 
7) Прикладной уровень (application layer)
6) Уровень представления (presentation layer)
5) Сеансовый уровень (session layer) 
4) Транспортный уровень (transport layer)
3) Сетевой уровень (network layer)
2) Катальный уровень (dat link layer)
1) Физический уровень (physical layer) 

На первом уровне OSI данные передаются в виде физических сигналов. Сигналы бывают электрическими или оптическими. Для железа - это набор единиц и нулей, то есть биты. Эти цифры могут передаваться через кабель или вайфай. 

На канальном уровне проверяются и исправляются ошибки передачи первого уровня. Единицы и нули превращаются из битов в фреймы. А эти фреймы получают два адреса - отправителя и получателя. Их называют MAC-адресами. Формат MAC-адреса выглядит как: 00:AB:CD:EF:11:22
Важнейший стандарт технологий 1 и 2 уровней - Ethernet, описывающиц кодирование и передачу данных. 

На след уровне фреймы становятся пакетами. Т.ж они получают IP-адреса по тому же принципу - отправитель и получатель. 

Транспортный уровень обеспечивает передачу данных по сети. В этом ему помогают два протокола  - TCP и UDP. 
TCP протокол осущетсвляет доставку запроса и целостность его передачи. Он используется когда юзер серфит в интернете, пользуется сервисами, соц.сетями и прочим. UDP протокол не имеет такой гарантированной передачи данных, как TCP, но у него есть преимущество - это скорость. UDP широко используется для перессылки голосовых и видео в реальном времени. А именно в IP-телефонии и видеозвонках. Н-р звонки в Телеграм используют транспортный прототкол UDP. 

Сеансовый уровень отвечает за поддержку сеанса или сессии связи. Службы сеансового уровня применяются в средах приложений, требующих удаленного вызова процедур т.е чтобы запрашивать выполнение действий на удаленных компьютерах на одном устройстве. За это отвечает протокол PAP. Т.ж примером такой работы является онлайн-транляция на площадке Twich. Во время онлайн-трансляции необходимо, чтобы два потока данных (аудио и видео) шли синхронно.

Уровень представления отвечет за кодирование и сжатие данных, для этого используется протокол ASCII. На этом уровне изображение преобразуется в файл с расширением .jpeg и т.д. Т.ж этот уровень отвечает за преобразование видео и аудио в понятные для людей форматы. Помимо перечисленного уровень представления переводит текст из одной кодировки в другую, и шифрует данные., чтобы их защитить. 

Прикладной уровень - уровень «для людей». Его главная задача - отобразить пользователю данные в понятном ему виде. Благодаря его протоколам, мы можем серфить по интернету. К основным протоколам перкдачи данных относятся:
HTTP - используется для передачи данныз в браузере твоих гаджетов. 
SMTP - используется для передачи электронных писем
FTP - используется для передачи файлов между компьютерами. 
Т.ж прикладной уровень переводит IP-адрес в знакомый для нас формат -   https://kavichki.com/. Это URL-адрес. В это ему помогает технология DNS. 
Этот подход лежит в основе клиент-серверной архитектуры. Она позволяет разграничить логику работы приложения на 2 раздела: клиент и сервер. Клиент делает запрос серверу. Сервер отправляет ответ клиенту. 

Н-р задача открыть главную страницу Google. Компьютер подключен к интернету через роутер. Роутер на основании MAC-адреса компа выделяет ему IP-адрес. Набираем в браузер URL-адрес - - https://www.google.com. Браузер с помощью DNS, узнал что IP-адрес у веб-страницы - google.com - 173.194.44.40. После, браузер просит компьютер отправить запрос на айпишник гугла. 
Комп упаковывает данные в пакет, указывая IP-адреса отправителя и получателя. Он отправляет пакет роутеру. Роутер дает запрос провайдеру, через цепочку сетевых устройств. Провайдер перенаправляет запрос на определенный сервер компании «Google», на котором хранится программа, отвечающая за работу главной страницы. Программа обращается в базу данных. Получив необходимые данные, формируется ответ. Далее пакет данных главной страницы отправляется обратно на наш комп пройдя тот же путь. Браузер отображает главную страницу, на основе полученных данных. На все ушло меньше одной секунды. 

Получается, что клиент - система, запрашивающая нужную пользовательскую информацию, а сервер - система, которая обрабатывает полученную информацию и составляет ответ. 
